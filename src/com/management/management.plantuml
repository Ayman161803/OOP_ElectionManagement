@startuml

title __MANAGEMENT's Class Diagram__\n

  namespace com.management {
    class com.management.AadharGenerator {
        + AadharGenerator()
        + isDataInFormat()
    }
  }
  

  namespace com.management {
    class com.management.CitizenRegistrationForm {
        - DOBLabel : JLabel
        - DOBTextField : JTextField
        - ReturnMessage : JTextPane
        - addressTextField : JTextField
        - ageLabel : JLabel
        - ageTextField : JTextField
        - constituencyTextField : JTextField
        - enterButton : JButton
        - frame : JFrame
        - genderLabel : JLabel
        - genderTextField : JTextField
        - nameLabel : JLabel
        - nameTextField : JTextField
        - panelAll : JPanel
        + CitizenRegistrationForm()
        + isDataInFormat()
    }
  }
  

  namespace com.management {
    class com.management.Constituency {
        - Name : String
        - citizens : ArrayList<Citizen>
        - noOfEligibleCitizens : int
        + Constituency()
        + Constituency()
        + addToList()
        + build()
        + getCount()
        + getName()
        + getNoOfEligibleCitizens()
        + getPollingManagementDesk()
        + getVoterManagementDesk()
        + percentageOfGender()
        + percentageRegistered()
        + voterTurnOut()
    }
  }
  

  namespace com.management {
    interface com.management.Desk {
        {abstract} + build()
        {abstract} + getCount()
    }
  }
  

  namespace com.management {
    interface com.management.Form {
        {abstract} + isDataInFormat()
    }
  }
  

  namespace com.management {
    class com.management.PollingBooth {
        ~ constituencies : Constituency[]
        + PollingBooth()
        + automateVoting()
        + registerVote()
    }
  }
  

  namespace com.management {
    class com.management.PollingManagementDesk {
        - candidates : ArrayList<Candidate>
        - totalNoOfVotes : long
        - votesCounter : int[]
        + PollingManagementDesk()
        + build()
        + getCandidates()
        + getCount()
        + getPopularityScore()
        + getTotalNoOfVotes()
        + getWinner()
        + registerCandidate()
        + registerVote()
        + releaseCandidateList()
        + showAllCandidates()
        + showWinner()
        # updateVote()
    }
  }
  

  namespace com.management {
    interface com.management.Registrar {
        {abstract} + addToList()
    }
  }
  

  namespace com.management {
    class com.management.Result {
        ~ constituencies : ArrayList<Constituency>
        ~ parties : ArrayList<Party>
        + Result()
        + stateShortResult()
        + stateVoterTurnout()
        + winnerParty()
    }
  }
  

  namespace com.management {
    class com.management.Voter {
        - hasVoted : boolean
        + Voter()
        + hasVoted()
        + toString()
        # markVoted()
    }
  }
  

  namespace com.management {
    class com.management.VoterManagementDesk {
        - voterList : ArrayList<Voter>
        + VoterManagementDesk()
        + addToList()
        + build()
        + displayVotersRegistered()
        + genrateAadharCard()
        + getCount()
        + memberOfGender()
        + registerIndividual()
        # doesExist()
        # getAadharFromIndex()
        # markVoted()
        - isAadharNumberValid()
        - isEligibleByAge()
        - returnCitizenWithAadharNumber()
    }
  }
  

  namespace com.management {
    class com.management.VoterRegistrationForm {
        - AadharNumberText : JLabel
        - AadharNumberTextField : JTextField
        - EnterButton : JButton
        {static} - count : int
        - frame : JFrame
        - panel1 : JPanel
        - textPane1 : JTextPane
        + VoterRegistrationForm()
        + isDataInFormat()
    }
  }
  

  com.management.AadharGenerator .up.|> com.management.Form
  com.management.CitizenRegistrationForm .up.|> com.management.Form
  com.management.Constituency .up.|> com.management.Registrar
  com.management.Constituency o-- com.management.PollingManagementDesk : pollingManagementDesk
  com.management.Constituency o-- com.management.VoterManagementDesk : voterManagementDesk
  com.management.PollingManagementDesk .up.|> com.management.Desk
  com.management.Voter -up-|> com.management.populace.Citizen
  com.management.VoterManagementDesk .up.|> com.management.Desk
  com.management.VoterManagementDesk .up.|> com.management.Registrar
  com.management.VoterRegistrationForm .up.|> com.management.Form
  com.management.VoterRegistrationForm -up-|> javax.swing.JFrame


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
